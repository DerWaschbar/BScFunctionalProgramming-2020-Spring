.comp 920 0101110100100
.start __listfun_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_listfun "listfun"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.implab e_StdList_s!!
.implab e_StdList_slength;47
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_s+;6
.implab e_StdInt_n+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export __listfun_Start
.o 0 0
__listfun_Start
	build _ 0 n5
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n5
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea5
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea5
.o 0 0
s5
	create
.d 1 0
	jsr s4
.o 1 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	create
.d 1 0
	jsr s4
.o 1 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
.o 1 0
s4
	pushI 10
	pushI 1
.d 1 2 ii
	jmp s8
.o 4 2 ii
s7
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.1
	push_b 1
	push_b 1
	push_a 2
	push_a 2
	push_a 2
	build_u _ 3 2 n11
	buildI_b 0
	push_a 4
	build _ 2 e_StdInt_n+;6
	fillh _Cons 2 5
	pop_a 3
	pop_b 2
.d 1 0
	rtn
else.1
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	addI
	update_b 1 3
	updatepop_b 0 2
	pop_a 3
.d 1 2 ii
	jmp s8
.nu 3 2 _ _
.o 1 0
n11
	push_node_u _cycle_in_spine 3 2
.o 4 2 ii
ea11
.o 4 2 ii
s11
	pushI 1
	push_b 1
	addI
	push_b 2
	push_a 2
	push_a 2
	push_a 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	update_b 1 3
	updatepop_b 0 2
.d 4 2 ii
	jmp s7
.o 1 2 ii
s8
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.2
	pushI 5
	pushI 1
	buildI_b 2
	buildI_b 3
	buildI_b 2
	update_b 1 3
	updatepop_b 0 2
.d 4 2 ii
	jmp s7
else.2
	fillh _Nil 0 0
	pop_b 2
.d 1 0
	rtn
